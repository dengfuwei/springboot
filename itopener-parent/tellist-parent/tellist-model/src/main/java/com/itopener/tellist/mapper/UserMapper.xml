<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itopener.tellist.mapper.UserMapper">

	<resultMap id="BaseResultMap" type="com.itopener.tellist.model.User">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="login_name" property="loginName" jdbcType="VARCHAR" />
		<result column="login_pwd" property="loginPwd" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="TINYINT" />
		<result column="role" property="role" jdbcType="TINYINT" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="update_user_id" property="updateUserId" jdbcType="BIGINT" />
	</resultMap>

	<sql id="Insert_Column_List">
		login_name, login_pwd, state, role, create_time, create_user_id, update_time, update_user_id
	</sql>

	<sql id="Column_List">
		id, <include refid="Insert_Column_List" />
	</sql>

	<sql id="Where">
		<where>
			<if test="id > 0">
				and id = #{id,jdbcType=BIGINT}
			</if>
			<if test="loginName != null and loginName != ''">
				and login_name = #{loginName,jdbcType=VARCHAR}
			</if>
			<if test="state > 0">
				and state = #{state,jdbcType=TINYINT}
			</if>
			<if test="loginPwd != null and loginPwd != ''">
				and login_pwd = #{loginPwd,jdbcType=VARCHAR}
			</if>
		</where>
	</sql>

	<select id="select" parameterType="com.itopener.tellist.conditions.UserCondition" resultMap="BaseResultMap">
		select <include refid="Column_List" />
		from t_user
		<include refid="Where" />
	</select>

	<select id="selectCount" parameterType="com.itopener.tellist.conditions.UserCondition" resultType="int">
		select count(id)
		from t_user
		<include refid="Where" />
	</select>

	<select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select <include refid="Column_List" />
		from t_user
		where id = #{id,jdbcType=BIGINT}
	</select>

	<!-- 新增 -->
	<insert id="insert" parameterType="com.itopener.tellist.model.User" keyProperty="id" useGeneratedKeys="true">
		insert into t_user(<include refid="Insert_Column_List" />)
		values (
			#{loginName,jdbcType=VARCHAR},
			#{loginPwd,jdbcType=VARCHAR},
			#{state,jdbcType=TINYINT},
			#{role,jdbcType=TINYINT},
			#{createTime,jdbcType=TIMESTAMP},
			#{createUserId,jdbcType=BIGINT},
			#{updateTime,jdbcType=TIMESTAMP},
			#{updateUserId,jdbcType=BIGINT})
	</insert>

	<update id="update" parameterType="com.itopener.tellist.model.User">
		update t_user
		set
			login_name = #{loginName,jdbcType=VARCHAR},
			login_pwd = #{loginPwd,jdbcType=VARCHAR},
			state = #{state,jdbcType=TINYINT},
			role = #{role,jdbcType=TINYINT},
			update_time = #{updateTime,jdbcType=TIMESTAMP},
			update_user_id = #{updateUserId,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<delete id="delete" parameterType="com.itopener.tellist.model.User">
		delete from t_user
		where id = #{id,jdbcType=BIGINT}
	</delete>
</mapper>